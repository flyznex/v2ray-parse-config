<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

  <title>Config tunnel</title>
</head>

<body>
  <div class="container">
    <div class="row">
      <h1> Last updated at:<span class="badge rounded-pill bg-secondary bg-info text-dark">{{ .UpdatedAt }}</span></h1>
    </div>
    <div class="row gy-5">
      <form onsubmit="return doSubmit(event);">
        <div class="row">
          <div class="col">
            <input type="text" class="form-control" placeholder="First name" aria-label="First name" id="user" required>
          </div>
          <div class="col">
            <input type="text" class="form-control" placeholder="Last name" aria-label="Last name" id="pwd" required>
          </div>
        </div>

        <div class="mb-3">
          <label for="content" class="form-label">Content</label>
          <textarea class="form-control" id="content" rows="3" required></textarea>
        </div>
        <!-- <div class="mb-3 form-check">
          <input type="checkbox" class="form-check-input" id="exampleCheck1">
          <label class="form-check-label" for="exampleCheck1">Check me out</label>
        </div> -->
        <button type="submit" class="btn btn-primary" onsubmit="doSubmit">Submit</button>
      </form>
      <div class="modal" tabindex="-1" id="myModal">
        <div class="modal-dialog">
          <div class="modal-content ">
            <div class="modal-header alert" role="alert" id="myModalHeader">
              <h5 class="modal-title" id="result-title"></h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <p id="result-body"></p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>
    </div>

  </div>
  <!-- Optional JavaScript; choose one of the two! -->

  <!-- Option 1: Bootstrap Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>

  <!-- Option 2: Separate Popper and Bootstrap JS -->
  <!--
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>
    -->
  <script>
    var url = "/config"
    async function doSubmit(event) {
      event.preventDefault();
      var user = document.getElementById("user").value;
      var pwd = document.getElementById("pwd").value;

      if (!user || !pwd) {
        console.log("Input is empty")
        return false
      }
      data = {
        "vmess": document.getElementById("content").value
      }
      //call api
      await fetch(url, {
        method: 'POST', // *GET, POST, PUT, DELETE, etc.
        mode: 'cors', // no-cors, *cors, same-origin
        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
        credentials: 'omit', // include, *same-origin, omit
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Basic ' + btoa(user + ":" + pwd)
        },
        redirect: 'follow', // manual, *follow, error
        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
        body: JSON.stringify(data) // body data type must match "Content-Type" header
      }).then((response) => {
        if (response.status == 401) {
          console.log("401")
          setModalContent("Unauthorized","Invalid credentials")
          return
        }
        var success = response.status == 200
        response.json().then((d) => {
          let title = success ? "SUCCESS" : "FAILED"
           setModalContent(title,d.message,success)
          })
      }).catch((err) => {
        console.log(err)
        setModalContent("ERROR", err)
      });
      var myModal = new bootstrap.Modal(document.getElementById('myModal'), {})
      myModal.show()
      return true
    }

    function setModalContent(title, result, success) {
      var elem_res_title = document.getElementById('result-title');
      var elem_res_body = document.getElementById('result-body');
      var elem_modal_header = document.getElementById('myModalHeader');
      elem_res_title.innerHTML = title
      elem_res_body.innerHTML = result
      let clsName = success ? "alert-success" : "alert-danger"
      elem_modal_header.classList.add(clsName)
    }
  </script>
</body>

</html>